<Project Sdk="Microsoft.NET.Sdk.BlazorWebAssembly">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <NullabilityInfoContextSupport>true</NullabilityInfoContextSupport>
    <ServiceWorkerAssetsManifest>service-worker-assets.js</ServiceWorkerAssetsManifest>
    <Version>1.0.4</Version>
  </PropertyGroup>
  <PropertyGroup>
    <BlazorWebAssemblyEnableAOT>false</BlazorWebAssemblyEnableAOT>
	<!-- Unfortunately, while this does load globalization data, the languages do not have their full English names set, only the short language codes -->
	<BlazorWebAssemblyLoadAllGlobalizationData>true</BlazorWebAssemblyLoadAllGlobalizationData>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Markdig" Version="0.37.0" />
    <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly" Version="8.0.8" />
    <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.DevServer" Version="8.0.8" PrivateAssets="all" />
    <PackageReference Include="PublishSPAforGitHubPages.Build" Version="3.0.0" />
    <PackageReference Include="ScryfallAPI.Client" Version="3.1.0" />
    <PackageReference Include="Serilog.Extensions.Logging" Version="8.0.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\MtgCsvHelper\MtgCsvHelper.csproj" />
  </ItemGroup>

  <ItemGroup>
    <ServiceWorker Include="wwwroot\service-worker.js" PublishedContent="wwwroot\service-worker.published.js" />
  </ItemGroup>

  <ItemGroup>
    <Content Update="wwwroot\appsettings.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory> 
    </Content>
  </ItemGroup>

  <!-- Copy README.md from repository root directory to wwwroot so it is available in About -->
  <Target Name="CopyReadme" AfterTargets="Build">
    <Copy SourceFiles="..\README.md" DestinationFolder="wwwroot" />
  </Target>

</Project>
